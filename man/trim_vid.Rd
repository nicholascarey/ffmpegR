% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join_vid.R, R/trim_vid.R
\name{trim_vid}
\alias{trim_vid}
\title{join_vid}
\usage{
trim_vid(file = NULL, dir = NULL, output = NULL, from = NULL,
  to = NULL, remove_audio = FALSE)

trim_vid(file = NULL, dir = NULL, output = NULL, from = NULL,
  to = NULL, remove_audio = FALSE)
}
\arguments{
\item{file}{string. Name of file in `dir` or current working directory.}

\item{dir}{string. Directory location of file you want to trim. If left NULL
uses current working directory.}

\item{output}{string. Name of new file, without filetype extension. If left
NULL named same as the FIRST file, appended with `_join`}

\item{from}{string. Time into trim from in hh:mm:ss format.}

\item{to}{string or numeric. Either the time to trim to in hh:mm:ss format,
or numeric time in s to trim to after 'from' time.}

\item{remove_audio}{logical. If TRUE audio is removed from the copy.}

\item{file1}{string. Name of first file in `dir` or current working directory.}

\item{file2}{string. Name of second file in `dir` or current working directory.}

\item{dir}{string. Directory location of file you want to trim. If left NULL
uses current working directory.}

\item{output}{string. Name of new file, without filetype extension. If left
NULL output is named same as the original file appended with `_trim`.}
}
\description{
Joins two movie files together.

Trims a movie file to the given `from` and `to` timepoints.
}
\details{
Either have both in the current working directory, or specify the location
with `dir`, in which case the working directory is unchanged.

Can rename the output file using `output`, otherwise it will be named the
same as the FIRST file appended with `_join`. It will overwrite any previous
joined file with the same name.

Both files must be same format, and have same metadata (e.g. resolution,
frame rate etc.). If they don't it will probably fail.

No format conversion or rencoding is done. New file is same format as old.

The `from` must be a string in "HH:MM:SS" format. The `to` can either be a
string in the same format (the timestamp to trim to), or a numeric value in
seconds (file will be trimmed to this point after the from timestamp).

Either have the file in the current working directory, or specify the
location with `dir`, in which case the working directory is unchanged.

Can rename the output file using `output`, otherwise it will be named the
same as the original file appended with `_trim`. It will overwrite any
previous trimmed file with the same name.

No format conversion or rencoding is done. New file is same format as old.
}
\examples{
# Commented out because we don't want package checks to actually run this
#
# trim_vid(dir = "path/to/directory",
#          file1 = "input_file_1.mp4",
#          file2 = "input_file_2.mp4",
#          output = "output")
# Commented out because we don't want package checks to actually run this
#
# trim_vid(dir = "path/to/directory",
#          file = "input_file.mp4",
#          output = "output",
#          from = "00:02:45",
#          to = "00:09:15")
}
